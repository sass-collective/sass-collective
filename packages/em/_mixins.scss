// ============================================================================================= //
//                                            MIXINS                                             //
// ============================================================================================= //

@use "@unsass/css";
@use "./functions";

///
/// @example - scss
///     @include em.convert(font-size, 16px, 16px);
///     // font-size: 1em;
///     @include em.convert(margin, 20px 30px, 16px);
///     // margin: 1.25em 1.875em;
///     @include em.convert(border, 1px solid darkcyan, 16px);
///     // border: 0.0625em solid darkcyan;
///     @include em.convert(box-shadow, (0 0 10px 5px rgba(darkcyan, 0.75), inset 0 0 10px 5px rgba(darkcyan, 0.75)), 16px);
///     // box-shadow: 0 0 0.625em 0.3125em rgba(0, 139, 139, 0.75), inset 0 0 0.625em 0.3125em rgba(0, 139, 139, 0.75);
///
/// @see {mixin} css.declaration
/// @see {function} functions.convert
///
@mixin convert($property, $value, $context, $important: false) {
    @include css.declaration($property, functions.convert($value, $context), $important);
}

///
/// Fallback mixin in case if your namespace if not enough explicit.
///
/// @example - scss
///     @use "@sass-collective/em" as foo;
///     // @include foo.em(font-size, 16px, 16px);
///
/// @see {mixin} convert
///
@mixin em($property, $value, $context, $important: false) {
    @include convert($property, $value, $context, $important);
}
